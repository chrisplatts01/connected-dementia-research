{% extends "pattern-library-layout.njk" %}

{% import 'macros/volunteer.njk' as volunteer %}

{% block content %}
  <h1 class="pl-heading">File upload</h1>
  <p>The file upload widget uses the Uppy JS plugin. Only one per page is allowed at the moment  as each instance requires the JS code to target each container ID specifically.
    <br>
    <br>
    <b>Attributes</b><br>
      <code>data-auto-upload="true|false"</code> - Choose whether to allow automatic or user-initiated uploads; the default is 'false'<br>
      <code>data-protocol="tus|xhr"</code> - Choose which request protocolto use; the default is 'xhr' (XmlHttpRequest)<br>
      <code>data-endpoint="YOUR_ENDPOINT_URL"</code> - See notes below<br>
    <br>
    <br>

    <b>notes:</b><br>
    The TUS protocol is a resumable protocol developed by Transloadit, The default endpoint is 'https://master.tus.io/files/' provided for test purposes by Transloadit<br>
    The XHR protocol uses standard Ajax XmlHttpReques. The default endpoint is 'https://example.cm/upload' <em>and will fail</em>!
  </p>
  <p>
    The widget is currently configured to allow between 1 and 3 image files (image/*) to be attached.
  </p>
  {{ volunteer.fileUpload() }}
  <p>
    <small><i>TODO:</i> Test edge cases for style inconsistencies.</small><br />
    <small><i>TODO:</i> Find a way toallow multiple instances on a page with gnerated rather than explicit IDs.</small>
  </p>
  <h2 class="pl-heading">HTML</h2>
  <textarea class="pl-code" disabled>
    {{ volunteer.fileUpload() }}
  </textarea>
  <h2 class="pl-heading">SCSS</h2>
  <textarea class="pl-code" disabled>
    {% include 'components/file-upload/_file-upload.scss' ignore missing %}
  </textarea>
{% endblock %}
